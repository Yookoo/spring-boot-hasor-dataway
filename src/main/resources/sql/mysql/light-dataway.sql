/*
 Navicat Premium Data Transfer

 Source Server         : 192.168.60.103
 Source Server Type    : MySQL
 Source Server Version : 50716
 Source Host           : 192.168.60.103:3306
 Source Schema         : light-dataway

 Target Server Type    : MySQL
 Target Server Version : 50716
 File Encoding         : 65001

 Date: 04/08/2020 11:57:46
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for interface_info
-- ----------------------------
DROP TABLE IF EXISTS `interface_info`;
CREATE TABLE `interface_info` (
  `api_id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'ID',
  `api_method` varchar(12) NOT NULL COMMENT 'HttpMethod：GET、PUT、POST',
  `api_path` varchar(512) NOT NULL COMMENT '拦截路径',
  `api_status` int(2) NOT NULL COMMENT '状态：0草稿，1发布，2有变更，3禁用',
  `api_comment` varchar(255) DEFAULT NULL COMMENT '注释',
  `api_type` varchar(24) NOT NULL COMMENT '脚本类型：SQL、DataQL',
  `api_script` mediumtext NOT NULL COMMENT '查询脚本：xxxxxxx',
  `api_schema` mediumtext COMMENT '接口的请求/响应数据结构',
  `api_sample` mediumtext COMMENT '请求/响应/请求头样本数据',
  `api_option` mediumtext COMMENT '扩展配置信息',
  `api_create_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `api_gmt_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  PRIMARY KEY (`api_id`),
  UNIQUE KEY `idx_interface_info` (`api_method`,`api_path`)
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8mb4 COMMENT='Dataway 中的API';

-- ----------------------------
-- Records of interface_info
-- ----------------------------
BEGIN;
INSERT INTO `interface_info` VALUES (1, 'POST', '/api/demo/user/save', 1, '示例_新增用户信息', 'DataQL', '// insert语句模版\n\nvar insertSQL = @@sql(userInfo) <%\n    insert into t_user (username, email, passwd) values (\n        #{userInfo.username},\n        #{userInfo.email},\n        #{userInfo.passwd}\n    )\n%>\n// 插入数据\nreturn insertSQL(${userInfo});', '{\"headerSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{}},\"requestSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"userInfo\":{\"type\":\"object\",\"properties\":{\"passwd\":{\"type\":\"string\"},\"email\":{\"type\":\"string\"},\"username\":{\"type\":\"string\"}}}}},\"responseSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"executionTime\":{\"type\":\"number\"},\"code\":{\"type\":\"number\"},\"success\":{\"type\":\"boolean\"},\"lifeCycleTime\":{\"type\":\"number\"},\"message\":{\"type\":\"string\"},\"value\":{\"type\":\"number\"}}}}', '{\"requestBody\":\"{\\n  \\\"userInfo\\\": {\\n    \\\"username\\\": \\\"hello\\\",\\n    \\\"passwd\\\": \\\"123456\\\",\\n    \\\"email\\\": \\\"123@qq.com\\\"\\n  }\\n}\",\"headerData\":[]}', '{\"wrapAllParameters\":false,\"resultStructure\":true,\"responseFormat\":\"{\\n  \\\"success\\\"      : \\\"@resultStatus\\\",\\n  \\\"message\\\"      : \\\"@resultMessage\\\",\\n  \\\"code\\\"         : \\\"@resultCode\\\",\\n  \\\"lifeCycleTime\\\": \\\"@timeLifeCycle\\\",\\n  \\\"executionTime\\\": \\\"@timeExecution\\\",\\n  \\\"value\\\"        : \\\"@resultData\\\"\\n}\",\"wrapParameterName\":\"root\"}', '2020-08-04 11:21:16', '2020-08-04 11:21:28');
INSERT INTO `interface_info` VALUES (2, 'PUT', '/api/demo/user/updateById', 1, '示例_根据用户ID更新用户信息', 'DataQL', '// a new Query.\n// update 语句模版\nvar updateSQL = @@sql(userInfo) <%\n    update t_user set \n         username = #{userInfo.username}\n    where id = #{userInfo.id}\n%>\n// 插入数据\nreturn updateSQL(${userInfo});\n', '{\"headerSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{}},\"requestSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"userInfo\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"number\"},\"username\":{\"type\":\"string\"}}}}},\"responseSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"executionTime\":{\"type\":\"number\"},\"code\":{\"type\":\"number\"},\"success\":{\"type\":\"boolean\"},\"lifeCycleTime\":{\"type\":\"number\"},\"message\":{\"type\":\"string\"},\"value\":{\"type\":\"number\"}}}}', '{\"requestBody\":\"{\\n  \\\"userInfo\\\": {\\n      \\\"id\\\": 1,\\n      \\\"username\\\": \\\"xiaoming\\\"\\n  }\\n}\",\"headerData\":[]}', '{\"wrapAllParameters\":false,\"resultStructure\":true,\"responseFormat\":\"{\\n  \\\"success\\\"      : \\\"@resultStatus\\\",\\n  \\\"message\\\"      : \\\"@resultMessage\\\",\\n  \\\"code\\\"         : \\\"@resultCode\\\",\\n  \\\"lifeCycleTime\\\": \\\"@timeLifeCycle\\\",\\n  \\\"executionTime\\\": \\\"@timeExecution\\\",\\n  \\\"value\\\"        : \\\"@resultData\\\"\\n}\",\"wrapParameterName\":\"root\"}', '2020-08-04 11:27:00', '2020-08-04 11:28:13');
INSERT INTO `interface_info` VALUES (4, 'GET', '/api/demo/user/findById', 1, '示例_根据用户ID查询用户信息', 'DataQL', 'hint FRAGMENT_SQL_COLUMN_CASE = \"hump\"\nimport \'net.hasor.dataql.fx.basic.ConvertUdfSource\' as convert;\n// 声明一个 SQL\nvar dataSet = @@sql(id) <%\n    select * from t_user where id = #{id};\n%>\n// 执行这个 SQL，并返回结果\nreturn dataSet(convert.toInt(${id}));', '{\"headerSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{}},\"requestSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"number\"}}},\"responseSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"executionTime\":{\"type\":\"number\"},\"code\":{\"type\":\"number\"},\"success\":{\"type\":\"boolean\"},\"lifeCycleTime\":{\"type\":\"number\"},\"message\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"deleted\":{\"type\":\"number\"},\"passwd\":{\"type\":\"string\"},\"id\":{\"type\":\"number\"},\"email\":{\"type\":\"string\"},\"username\":{\"type\":\"string\"}}}}}}', '{\"requestBody\":\"{\\\"id\\\":1}\",\"headerData\":[]}', '{\"wrapAllParameters\":false,\"resultStructure\":true,\"responseFormat\":\"{\\n  \\\"success\\\"      : \\\"@resultStatus\\\",\\n  \\\"message\\\"      : \\\"@resultMessage\\\",\\n  \\\"code\\\"         : \\\"@resultCode\\\",\\n  \\\"lifeCycleTime\\\": \\\"@timeLifeCycle\\\",\\n  \\\"executionTime\\\": \\\"@timeExecution\\\",\\n  \\\"value\\\"        : \\\"@resultData\\\"\\n}\",\"wrapParameterName\":\"root\"}', '2020-08-04 11:33:59', '2020-08-04 11:46:15');
INSERT INTO `interface_info` VALUES (5, 'GET', '/api/demo/user/page/findAll', 1, '示例_分页查询所有用户', 'DataQL', '// a new Query.\n// SQL 执行器切换为分页模式\nhint FRAGMENT_SQL_COLUMN_CASE = \"hump\"\nhint FRAGMENT_SQL_QUERY_BY_PAGE = true\nhint FRAGMENT_SQL_QUERY_BY_PAGE_NUMBER_OFFSET = 1\n\n// 定义查询SQL\nvar dataSet = @@sql(orderBy) <%\n    select * from t_user order by #{orderBy}\n%>\n// 创建分页查询对象\nvar pageQuery =  dataSet(${orderBy});\n// 设置分页信息\nrun pageQuery.setPageInfo({\n    \"pageSize\"    : ${pageSize}, // 页大小\n    \"currentPage\" : ${pageNo}  // 第3页\n});\n// // 执行分页查询\nvar result = pageQuery.data();\n\n\nreturn result;', '{\"headerSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{}},\"requestSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"pageNo\":{\"type\":\"number\"},\"pageSize\":{\"type\":\"number\"},\"orderBy\":{\"type\":\"string\"}}},\"responseSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"executionTime\":{\"type\":\"number\"},\"code\":{\"type\":\"number\"},\"success\":{\"type\":\"boolean\"},\"lifeCycleTime\":{\"type\":\"number\"},\"message\":{\"type\":\"string\"},\"value\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"deleted\":{\"type\":\"number\"},\"passwd\":{\"type\":\"string\"},\"id\":{\"type\":\"number\"},\"email\":{\"type\":\"string\"},\"username\":{\"type\":\"string\"}}}}}}}', '{\"requestBody\":\"{\\n    \\\"pageNo\\\":1,\\n    \\\"pageSize\\\":5,\\n    \\\"orderBy\\\": \\\"id\\\"\\n}\",\"headerData\":[]}', '{\"wrapAllParameters\":false,\"resultStructure\":true,\"responseFormat\":\"{\\n  \\\"success\\\"      : \\\"@resultStatus\\\",\\n  \\\"message\\\"      : \\\"@resultMessage\\\",\\n  \\\"code\\\"         : \\\"@resultCode\\\",\\n  \\\"lifeCycleTime\\\": \\\"@timeLifeCycle\\\",\\n  \\\"executionTime\\\": \\\"@timeExecution\\\",\\n  \\\"value\\\"        : \\\"@resultData\\\"\\n}\",\"wrapParameterName\":\"root\"}', '2020-08-04 11:35:47', '2020-08-04 11:38:34');
INSERT INTO `interface_info` VALUES (7, 'GET', '/api/demo/user/findAll', 1, '示例_查询所有用户信息', 'DataQL', 'hint FRAGMENT_SQL_COLUMN_CASE = \"hump\"\n\n// 定义查询SQL\nvar dataSet = @@sql() <%\nselect * from t_user\n%>\nreturn dataSet()', '{\"headerSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{}},\"requestSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{}},\"responseSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"executionTime\":{\"type\":\"number\"},\"code\":{\"type\":\"number\"},\"success\":{\"type\":\"boolean\"},\"lifeCycleTime\":{\"type\":\"number\"},\"message\":{\"type\":\"string\"},\"value\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"deleted\":{\"type\":\"number\"},\"passwd\":{\"type\":\"string\"},\"id\":{\"type\":\"number\"},\"email\":{\"type\":\"string\"},\"username\":{\"type\":\"string\"}}}}}}}', '{\"requestBody\":\"{}\",\"headerData\":[]}', '{\"wrapAllParameters\":false,\"resultStructure\":true,\"responseFormat\":\"{\\n  \\\"success\\\"      : \\\"@resultStatus\\\",\\n  \\\"message\\\"      : \\\"@resultMessage\\\",\\n  \\\"code\\\"         : \\\"@resultCode\\\",\\n  \\\"lifeCycleTime\\\": \\\"@timeLifeCycle\\\",\\n  \\\"executionTime\\\": \\\"@timeExecution\\\",\\n  \\\"value\\\"        : \\\"@resultData\\\"\\n}\",\"wrapParameterName\":\"root\"}', '2020-08-04 11:46:51', '2020-08-04 11:47:38');
INSERT INTO `interface_info` VALUES (8, 'DELETE', '/api/demo/user/deleteById', 1, '示例_根据用户ID删除用户', 'DataQL', '\n\nvar deleteSQL = @@sql(id) <%\n    update t_user set deleted = 1 where id = #{id};\n%>\n// 执行这个 SQL，并返回结果\nreturn deleteSQL(${id});', '{\"headerSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{}},\"requestSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"number\"}}},\"responseSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"executionTime\":{\"type\":\"number\"},\"code\":{\"type\":\"number\"},\"success\":{\"type\":\"boolean\"},\"lifeCycleTime\":{\"type\":\"number\"},\"message\":{\"type\":\"string\"},\"value\":{\"type\":\"number\"}}}}', '{\"requestBody\":\"{\\\"id\\\":3}\",\"headerData\":[]}', '{\"wrapAllParameters\":false,\"resultStructure\":true,\"responseFormat\":\"{\\n  \\\"success\\\"      : \\\"@resultStatus\\\",\\n  \\\"message\\\"      : \\\"@resultMessage\\\",\\n  \\\"code\\\"         : \\\"@resultCode\\\",\\n  \\\"lifeCycleTime\\\": \\\"@timeLifeCycle\\\",\\n  \\\"executionTime\\\": \\\"@timeExecution\\\",\\n  \\\"value\\\"        : \\\"@resultData\\\"\\n}\",\"wrapParameterName\":\"root\"}', '2020-08-04 11:48:36', '2020-08-04 11:54:41');
COMMIT;

-- ----------------------------
-- Table structure for interface_release
-- ----------------------------
DROP TABLE IF EXISTS `interface_release`;
CREATE TABLE `interface_release` (
  `pub_id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Publish ID',
  `pub_api_id` int(11) NOT NULL COMMENT '所属API ID',
  `pub_method` varchar(12) NOT NULL COMMENT 'HttpMethod：GET、PUT、POST',
  `pub_path` varchar(512) NOT NULL COMMENT '拦截路径',
  `pub_status` int(2) NOT NULL COMMENT '状态：0有效，1无效（可能被下线）',
  `pub_type` varchar(24) NOT NULL COMMENT '脚本类型：SQL、DataQL',
  `pub_script` mediumtext NOT NULL COMMENT '查询脚本：xxxxxxx',
  `pub_script_ori` mediumtext NOT NULL COMMENT '原始查询脚本，仅当类型为SQL时不同',
  `pub_schema` mediumtext COMMENT '接口的请求/响应数据结构',
  `pub_sample` mediumtext COMMENT '请求/响应/请求头样本数据',
  `pub_option` mediumtext COMMENT '扩展配置信息',
  `pub_release_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '发布时间（下线不更新）',
  PRIMARY KEY (`pub_id`),
  KEY `idx_interface_release` (`pub_api_id`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8mb4 COMMENT='Dataway API 发布记录';

-- ----------------------------
-- Records of interface_release
-- ----------------------------
BEGIN;
INSERT INTO `interface_release` VALUES (1, 1, 'POST', '/api/demo/user/save', 0, 'DataQL', '// insert语句模版\n\nvar insertSQL = @@sql(userInfo) <%\n    insert into t_user (username, email, passwd) values (\n        #{userInfo.username},\n        #{userInfo.email},\n        #{userInfo.passwd}\n    )\n%>\n// 插入数据\nreturn insertSQL(${userInfo});', '// insert语句模版\n\nvar insertSQL = @@sql(userInfo) <%\n    insert into t_user (username, email, passwd) values (\n        #{userInfo.username},\n        #{userInfo.email},\n        #{userInfo.passwd}\n    )\n%>\n// 插入数据\nreturn insertSQL(${userInfo});', '{\"headerSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{}},\"requestSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"userInfo\":{\"type\":\"object\",\"properties\":{\"passwd\":{\"type\":\"string\"},\"email\":{\"type\":\"string\"},\"username\":{\"type\":\"string\"}}}}},\"responseSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"executionTime\":{\"type\":\"number\"},\"code\":{\"type\":\"number\"},\"success\":{\"type\":\"boolean\"},\"lifeCycleTime\":{\"type\":\"number\"},\"message\":{\"type\":\"string\"},\"value\":{\"type\":\"number\"}}}}', '{\"requestBody\":\"{\\n  \\\"userInfo\\\": {\\n    \\\"username\\\": \\\"hello\\\",\\n    \\\"passwd\\\": \\\"123456\\\",\\n    \\\"email\\\": \\\"123@qq.com\\\"\\n  }\\n}\",\"headerData\":[]}', '{\"wrapAllParameters\":false,\"resultStructure\":true,\"responseFormat\":\"{\\n  \\\"success\\\"      : \\\"@resultStatus\\\",\\n  \\\"message\\\"      : \\\"@resultMessage\\\",\\n  \\\"code\\\"         : \\\"@resultCode\\\",\\n  \\\"lifeCycleTime\\\": \\\"@timeLifeCycle\\\",\\n  \\\"executionTime\\\": \\\"@timeExecution\\\",\\n  \\\"value\\\"        : \\\"@resultData\\\"\\n}\",\"wrapParameterName\":\"root\"}', '2020-08-04 11:21:28');
INSERT INTO `interface_release` VALUES (2, 2, 'PUT', '/api/demo/user/updateById', 0, 'DataQL', '// a new Query.\n// update 语句模版\nvar updateSQL = @@sql(userInfo) <%\n    update t_user set \n         username = #{userInfo.username}\n    where id = #{userInfo.id}\n%>\n// 插入数据\nreturn updateSQL(${userInfo});\n', '// a new Query.\n// update 语句模版\nvar updateSQL = @@sql(userInfo) <%\n    update t_user set \n         username = #{userInfo.username}\n    where id = #{userInfo.id}\n%>\n// 插入数据\nreturn updateSQL(${userInfo});\n', '{\"headerSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{}},\"requestSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"userInfo\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"number\"},\"username\":{\"type\":\"string\"}}}}},\"responseSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"executionTime\":{\"type\":\"number\"},\"code\":{\"type\":\"number\"},\"success\":{\"type\":\"boolean\"},\"lifeCycleTime\":{\"type\":\"number\"},\"message\":{\"type\":\"string\"},\"value\":{\"type\":\"number\"}}}}', '{\"requestBody\":\"{\\n  \\\"userInfo\\\": {\\n      \\\"id\\\": 1,\\n      \\\"username\\\": \\\"xiaoming\\\"\\n  }\\n}\",\"headerData\":[]}', '{\"wrapAllParameters\":false,\"resultStructure\":true,\"responseFormat\":\"{\\n  \\\"success\\\"      : \\\"@resultStatus\\\",\\n  \\\"message\\\"      : \\\"@resultMessage\\\",\\n  \\\"code\\\"         : \\\"@resultCode\\\",\\n  \\\"lifeCycleTime\\\": \\\"@timeLifeCycle\\\",\\n  \\\"executionTime\\\": \\\"@timeExecution\\\",\\n  \\\"value\\\"        : \\\"@resultData\\\"\\n}\",\"wrapParameterName\":\"root\"}', '2020-08-04 11:28:13');
INSERT INTO `interface_release` VALUES (3, 3, 'POST', '/api/demo/user/findById', 1, 'DataQL', 'hint FRAGMENT_SQL_COLUMN_CASE = \"hump\"\nimport \'net.hasor.dataql.fx.basic.ConvertUdfSource\' as convert;\n// 声明一个 SQL\nvar dataSet = @@sql(id) <%\n    select * from t_user where id = #{id};\n%>\n// 执行这个 SQL，并返回结果\nreturn dataSet(convert.toInt(${id}));', 'hint FRAGMENT_SQL_COLUMN_CASE = \"hump\"\nimport \'net.hasor.dataql.fx.basic.ConvertUdfSource\' as convert;\n// 声明一个 SQL\nvar dataSet = @@sql(id) <%\n    select * from t_user where id = #{id};\n%>\n// 执行这个 SQL，并返回结果\nreturn dataSet(convert.toInt(${id}));', '{\"headerSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{}},\"requestSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"number\"}}},\"responseSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"executionTime\":{\"type\":\"number\"},\"code\":{\"type\":\"number\"},\"success\":{\"type\":\"boolean\"},\"lifeCycleTime\":{\"type\":\"number\"},\"message\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"deleted\":{\"type\":\"number\"},\"passwd\":{\"type\":\"string\"},\"id\":{\"type\":\"number\"},\"email\":{\"type\":\"string\"},\"username\":{\"type\":\"string\"}}}}}}', '{\"requestBody\":\"{\\n    \\\"id\\\": 1\\n}\\n\",\"headerData\":[]}', '{\"wrapAllParameters\":false,\"resultStructure\":true,\"responseFormat\":\"{\\n  \\\"success\\\"      : \\\"@resultStatus\\\",\\n  \\\"message\\\"      : \\\"@resultMessage\\\",\\n  \\\"code\\\"         : \\\"@resultCode\\\",\\n  \\\"lifeCycleTime\\\": \\\"@timeLifeCycle\\\",\\n  \\\"executionTime\\\": \\\"@timeExecution\\\",\\n  \\\"value\\\"        : \\\"@resultData\\\"\\n}\",\"wrapParameterName\":\"root\"}', '2020-08-04 11:32:07');
INSERT INTO `interface_release` VALUES (4, 4, 'GET', '/api/demo/user/findById', 0, 'DataQL', 'hint FRAGMENT_SQL_COLUMN_CASE = \"hump\"\nimport \'net.hasor.dataql.fx.basic.ConvertUdfSource\' as convert;\n// 声明一个 SQL\nvar dataSet = @@sql(id) <%\n    select * from t_user where id = #{id};\n%>\n// 执行这个 SQL，并返回结果\nreturn dataSet(convert.toInt(${id}));', 'hint FRAGMENT_SQL_COLUMN_CASE = \"hump\"\nimport \'net.hasor.dataql.fx.basic.ConvertUdfSource\' as convert;\n// 声明一个 SQL\nvar dataSet = @@sql(id) <%\n    select * from t_user where id = #{id};\n%>\n// 执行这个 SQL，并返回结果\nreturn dataSet(convert.toInt(${id}));', '{\"headerSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{}},\"requestSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"message\":{\"type\":\"string\"}}},\"responseSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"executionTime\":{\"type\":\"number\"},\"code\":{\"type\":\"number\"},\"success\":{\"type\":\"boolean\"},\"lifeCycleTime\":{\"type\":\"number\"},\"message\":{\"type\":\"string\"},\"value\":{\"type\":[\"string\",\"boolean\",\"number\",\"object\",\"array\",\"null\"]}}}}', '{\"requestBody\":\"{\\\"message\\\":\\\"Hello DataQL.\\\"}\",\"headerData\":[]}', '{\"wrapAllParameters\":false,\"resultStructure\":true,\"responseFormat\":\"{\\n  \\\"success\\\"      : \\\"@resultStatus\\\",\\n  \\\"message\\\"      : \\\"@resultMessage\\\",\\n  \\\"code\\\"         : \\\"@resultCode\\\",\\n  \\\"lifeCycleTime\\\": \\\"@timeLifeCycle\\\",\\n  \\\"executionTime\\\": \\\"@timeExecution\\\",\\n  \\\"value\\\"        : \\\"@resultData\\\"\\n}\",\"wrapParameterName\":\"root\"}', '2020-08-04 11:34:31');
INSERT INTO `interface_release` VALUES (5, 4, 'GET', '/api/demo/user/findById', 0, 'DataQL', 'hint FRAGMENT_SQL_COLUMN_CASE = \"hump\"\nimport \'net.hasor.dataql.fx.basic.ConvertUdfSource\' as convert;\n// 声明一个 SQL\nvar dataSet = @@sql(id) <%\n    select * from t_user where id = #{id};\n%>\n// 执行这个 SQL，并返回结果\nreturn dataSet(convert.toInt(${id}));', 'hint FRAGMENT_SQL_COLUMN_CASE = \"hump\"\nimport \'net.hasor.dataql.fx.basic.ConvertUdfSource\' as convert;\n// 声明一个 SQL\nvar dataSet = @@sql(id) <%\n    select * from t_user where id = #{id};\n%>\n// 执行这个 SQL，并返回结果\nreturn dataSet(convert.toInt(${id}));', '{\"headerSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{}},\"requestSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"number\"}}},\"responseSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"executionTime\":{\"type\":\"number\"},\"code\":{\"type\":\"number\"},\"success\":{\"type\":\"boolean\"},\"lifeCycleTime\":{\"type\":\"number\"},\"message\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"deleted\":{\"type\":\"number\"},\"passwd\":{\"type\":\"string\"},\"id\":{\"type\":\"number\"},\"email\":{\"type\":\"string\"},\"username\":{\"type\":\"string\"}}}}}}', '{\"requestBody\":\"{\\\"id\\\":1}\",\"headerData\":[]}', '{\"wrapAllParameters\":false,\"resultStructure\":true,\"responseFormat\":\"{\\n  \\\"success\\\"      : \\\"@resultStatus\\\",\\n  \\\"message\\\"      : \\\"@resultMessage\\\",\\n  \\\"code\\\"         : \\\"@resultCode\\\",\\n  \\\"lifeCycleTime\\\": \\\"@timeLifeCycle\\\",\\n  \\\"executionTime\\\": \\\"@timeExecution\\\",\\n  \\\"value\\\"        : \\\"@resultData\\\"\\n}\",\"wrapParameterName\":\"root\"}', '2020-08-04 11:35:00');
INSERT INTO `interface_release` VALUES (6, 5, 'GET', '/api/demo/user/page/findAll', 0, 'DataQL', '// a new Query.\n// SQL 执行器切换为分页模式\nhint FRAGMENT_SQL_COLUMN_CASE = \"hump\"\nhint FRAGMENT_SQL_QUERY_BY_PAGE = true\nhint FRAGMENT_SQL_QUERY_BY_PAGE_NUMBER_OFFSET = 1\n\n// 定义查询SQL\nvar dataSet = @@sql(orderBy) <%\n    select * from t_user order by #{orderBy}\n%>\n// 创建分页查询对象\nvar pageQuery =  dataSet(${orderBy});\n// 设置分页信息\nrun pageQuery.setPageInfo({\n    \"pageSize\"    : ${pageSize}, // 页大小\n    \"currentPage\" : ${pageNo}  // 第3页\n});\n// // 执行分页查询\nvar result = pageQuery.data();\n\n\nreturn result;', '// a new Query.\n// SQL 执行器切换为分页模式\nhint FRAGMENT_SQL_COLUMN_CASE = \"hump\"\nhint FRAGMENT_SQL_QUERY_BY_PAGE = true\nhint FRAGMENT_SQL_QUERY_BY_PAGE_NUMBER_OFFSET = 1\n\n// 定义查询SQL\nvar dataSet = @@sql(orderBy) <%\n    select * from t_user order by #{orderBy}\n%>\n// 创建分页查询对象\nvar pageQuery =  dataSet(${orderBy});\n// 设置分页信息\nrun pageQuery.setPageInfo({\n    \"pageSize\"    : ${pageSize}, // 页大小\n    \"currentPage\" : ${pageNo}  // 第3页\n});\n// // 执行分页查询\nvar result = pageQuery.data();\n\n\nreturn result;', '{\"headerSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{}},\"requestSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"pageNo\":{\"type\":\"number\"},\"pageSize\":{\"type\":\"number\"},\"orderBy\":{\"type\":\"string\"}}},\"responseSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"executionTime\":{\"type\":\"number\"},\"code\":{\"type\":\"number\"},\"success\":{\"type\":\"boolean\"},\"lifeCycleTime\":{\"type\":\"number\"},\"message\":{\"type\":\"string\"},\"value\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"deleted\":{\"type\":\"number\"},\"passwd\":{\"type\":\"string\"},\"id\":{\"type\":\"number\"},\"email\":{\"type\":\"string\"},\"username\":{\"type\":\"string\"}}}}}}}', '{\"requestBody\":\"{\\n    \\\"pageNo\\\":1,\\n    \\\"pageSize\\\":5,\\n    \\\"orderBy\\\": \\\"id\\\"\\n}\",\"headerData\":[]}', '{\"wrapAllParameters\":false,\"resultStructure\":true,\"responseFormat\":\"{\\n  \\\"success\\\"      : \\\"@resultStatus\\\",\\n  \\\"message\\\"      : \\\"@resultMessage\\\",\\n  \\\"code\\\"         : \\\"@resultCode\\\",\\n  \\\"lifeCycleTime\\\": \\\"@timeLifeCycle\\\",\\n  \\\"executionTime\\\": \\\"@timeExecution\\\",\\n  \\\"value\\\"        : \\\"@resultData\\\"\\n}\",\"wrapParameterName\":\"root\"}', '2020-08-04 11:38:34');
INSERT INTO `interface_release` VALUES (7, 4, 'GET', '/api/demo/user/findById', 0, 'DataQL', 'hint FRAGMENT_SQL_COLUMN_CASE = \"hump\"\nimport \'net.hasor.dataql.fx.basic.ConvertUdfSource\' as convert;\n// 声明一个 SQL\nvar dataSet = @@sql(id) <%\n    select * from t_user where id = #{id};\n%>\n// 执行这个 SQL，并返回结果\nreturn dataSet(convert.toInt(${id}));', 'hint FRAGMENT_SQL_COLUMN_CASE = \"hump\"\nimport \'net.hasor.dataql.fx.basic.ConvertUdfSource\' as convert;\n// 声明一个 SQL\nvar dataSet = @@sql(id) <%\n    select * from t_user where id = #{id};\n%>\n// 执行这个 SQL，并返回结果\nreturn dataSet(convert.toInt(${id}));', '{\"headerSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{}},\"requestSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"number\"}}},\"responseSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"executionTime\":{\"type\":\"number\"},\"code\":{\"type\":\"number\"},\"success\":{\"type\":\"boolean\"},\"lifeCycleTime\":{\"type\":\"number\"},\"message\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"deleted\":{\"type\":\"number\"},\"passwd\":{\"type\":\"string\"},\"id\":{\"type\":\"number\"},\"email\":{\"type\":\"string\"},\"username\":{\"type\":\"string\"}}}}}}', '{\"requestBody\":\"{\\\"id\\\":1}\",\"headerData\":[]}', '{\"wrapAllParameters\":false,\"resultStructure\":true,\"responseFormat\":\"{\\n  \\\"success\\\"      : \\\"@resultStatus\\\",\\n  \\\"message\\\"      : \\\"@resultMessage\\\",\\n  \\\"code\\\"         : \\\"@resultCode\\\",\\n  \\\"lifeCycleTime\\\": \\\"@timeLifeCycle\\\",\\n  \\\"executionTime\\\": \\\"@timeExecution\\\",\\n  \\\"value\\\"        : \\\"@resultData\\\"\\n}\",\"wrapParameterName\":\"root\"}', '2020-08-04 11:46:15');
INSERT INTO `interface_release` VALUES (8, 7, 'GET', '/api/demo/user/findAll', 0, 'DataQL', 'hint FRAGMENT_SQL_COLUMN_CASE = \"hump\"\n\n// 定义查询SQL\nvar dataSet = @@sql() <%\nselect * from t_user\n%>\nreturn dataSet()', 'hint FRAGMENT_SQL_COLUMN_CASE = \"hump\"\n\n// 定义查询SQL\nvar dataSet = @@sql() <%\nselect * from t_user\n%>\nreturn dataSet()', '{\"headerSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{}},\"requestSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{}},\"responseSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"executionTime\":{\"type\":\"number\"},\"code\":{\"type\":\"number\"},\"success\":{\"type\":\"boolean\"},\"lifeCycleTime\":{\"type\":\"number\"},\"message\":{\"type\":\"string\"},\"value\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"deleted\":{\"type\":\"number\"},\"passwd\":{\"type\":\"string\"},\"id\":{\"type\":\"number\"},\"email\":{\"type\":\"string\"},\"username\":{\"type\":\"string\"}}}}}}}', '{\"requestBody\":\"{}\",\"headerData\":[]}', '{\"wrapAllParameters\":false,\"resultStructure\":true,\"responseFormat\":\"{\\n  \\\"success\\\"      : \\\"@resultStatus\\\",\\n  \\\"message\\\"      : \\\"@resultMessage\\\",\\n  \\\"code\\\"         : \\\"@resultCode\\\",\\n  \\\"lifeCycleTime\\\": \\\"@timeLifeCycle\\\",\\n  \\\"executionTime\\\": \\\"@timeExecution\\\",\\n  \\\"value\\\"        : \\\"@resultData\\\"\\n}\",\"wrapParameterName\":\"root\"}', '2020-08-04 11:47:10');
INSERT INTO `interface_release` VALUES (9, 7, 'GET', '/api/demo/user/findAll', 0, 'DataQL', 'hint FRAGMENT_SQL_COLUMN_CASE = \"hump\"\n\n// 定义查询SQL\nvar dataSet = @@sql() <%\nselect * from t_user\n%>\nreturn dataSet()', 'hint FRAGMENT_SQL_COLUMN_CASE = \"hump\"\n\n// 定义查询SQL\nvar dataSet = @@sql() <%\nselect * from t_user\n%>\nreturn dataSet()', '{\"headerSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{}},\"requestSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{}},\"responseSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"executionTime\":{\"type\":\"number\"},\"code\":{\"type\":\"number\"},\"success\":{\"type\":\"boolean\"},\"lifeCycleTime\":{\"type\":\"number\"},\"message\":{\"type\":\"string\"},\"value\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"deleted\":{\"type\":\"number\"},\"passwd\":{\"type\":\"string\"},\"id\":{\"type\":\"number\"},\"email\":{\"type\":\"string\"},\"username\":{\"type\":\"string\"}}}}}}}', '{\"requestBody\":\"{}\",\"headerData\":[]}', '{\"wrapAllParameters\":false,\"resultStructure\":true,\"responseFormat\":\"{\\n  \\\"success\\\"      : \\\"@resultStatus\\\",\\n  \\\"message\\\"      : \\\"@resultMessage\\\",\\n  \\\"code\\\"         : \\\"@resultCode\\\",\\n  \\\"lifeCycleTime\\\": \\\"@timeLifeCycle\\\",\\n  \\\"executionTime\\\": \\\"@timeExecution\\\",\\n  \\\"value\\\"        : \\\"@resultData\\\"\\n}\",\"wrapParameterName\":\"root\"}', '2020-08-04 11:47:38');
INSERT INTO `interface_release` VALUES (10, 8, 'DELETE', '/api/demo/user/deleteById', 0, 'DataQL', '\n\nvar deleteSQL = @@sql(id) <%\n    update t_user set deleted = 1 where id = #{id};\n%>\n// 执行这个 SQL，并返回结果\nreturn deleteSQL(${id});', '\n\nvar deleteSQL = @@sql(id) <%\n    update t_user set deleted = 1 where id = #{id};\n%>\n// 执行这个 SQL，并返回结果\nreturn deleteSQL(${id});', '{\"headerSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{}},\"requestSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"number\"}}},\"responseSchema\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"executionTime\":{\"type\":\"number\"},\"code\":{\"type\":\"number\"},\"success\":{\"type\":\"boolean\"},\"lifeCycleTime\":{\"type\":\"number\"},\"message\":{\"type\":\"string\"},\"value\":{\"type\":\"number\"}}}}', '{\"requestBody\":\"{\\\"id\\\":3}\",\"headerData\":[]}', '{\"wrapAllParameters\":false,\"resultStructure\":true,\"responseFormat\":\"{\\n  \\\"success\\\"      : \\\"@resultStatus\\\",\\n  \\\"message\\\"      : \\\"@resultMessage\\\",\\n  \\\"code\\\"         : \\\"@resultCode\\\",\\n  \\\"lifeCycleTime\\\": \\\"@timeLifeCycle\\\",\\n  \\\"executionTime\\\": \\\"@timeExecution\\\",\\n  \\\"value\\\"        : \\\"@resultData\\\"\\n}\",\"wrapParameterName\":\"root\"}', '2020-08-04 11:54:41');
COMMIT;

-- ----------------------------
-- Table structure for t_user
-- ----------------------------
DROP TABLE IF EXISTS `t_user`;
CREATE TABLE `t_user` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `username` varchar(255) NOT NULL COMMENT '用户名',
  `passwd` varchar(255) NOT NULL COMMENT '密码',
  `email` varchar(255) DEFAULT NULL COMMENT '邮箱',
  `deleted` tinyint(2) NOT NULL DEFAULT '0' COMMENT '是否删除',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Records of t_user
-- ----------------------------
BEGIN;
INSERT INTO `t_user` VALUES (1, 'xiaoming', '123456', '123@qq.com', 0);
INSERT INTO `t_user` VALUES (2, 'hello', '123456', '123@qq.com', 0);
INSERT INTO `t_user` VALUES (3, 'hello', '123456', '123@qq.com', 1);
INSERT INTO `t_user` VALUES (4, 'hello', '123456', '123@qq.com', 0);
INSERT INTO `t_user` VALUES (5, 'hello', '123456', '123@qq.com', 0);
INSERT INTO `t_user` VALUES (6, 'hello', '123456', '123@qq.com', 0);
INSERT INTO `t_user` VALUES (7, 'hello', '123456', '123@qq.com', 0);
INSERT INTO `t_user` VALUES (8, 'hello', '123456', '123@qq.com', 0);
INSERT INTO `t_user` VALUES (9, 'hello', '123456', '123@qq.com', 0);
INSERT INTO `t_user` VALUES (10, 'hello', '123456', '123@qq.com', 0);
INSERT INTO `t_user` VALUES (11, 'hello', '123456', '123@qq.com', 0);
COMMIT;

SET FOREIGN_KEY_CHECKS = 1;
